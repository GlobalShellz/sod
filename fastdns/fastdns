#!/usr/bin/perl

use Modern::Perl;

use Net::DNS;
use Time::HiRes qw(gettimeofday tv_interval);
use IPC::Shareable;

my $type = "PTR";

#my $server_list = 'dnsservers';
my $server_list = 'fastdnsservers';
open(SERVERLST, $server_list) || warn ("Failed to open server list $server_list - $!");


my @available_servers;
my @answer_list;
my @t;

for my $line (<SERVERLST>) {
	next if $line =~ /^(#|$)/;
	my %data;

	@data{qw(ip host note)} = split /\s+/, $line, 3;
	push @available_servers, {%data};
}
close SERVERLST;

my $A = 91;
my $B = 121;
my $C = 194;
my $D = 164;

print "\n";

#my $server = ((sort { (-1,1)[rand 2] } @available_servers)[1]);
my $len = $#available_servers + 1;
#my $len = 55;
my $outer = 0;

my $glue = $$;
my %options = (
     create    => 1,
     exclusive => 0,
     mode      => 0644,
     destroy   => 1,
     size      => 1024000,
);
my %final_parent_hash;

my $parent_share = tie %final_parent_hash, 'IPC::Shareable', $glue, { %options } or die "parent : tie failed\n";

my $i;

while ( $outer < $len ) {
#for $server (@available_servers) {
#	my $inner = 0;
	if ( ($outer+50) > $len ) {
		$i = $len - $outer;
	} else {
		$i = 50;
	}
	my @childs;
	my @list;

	for ( my $inner = 0; $inner < $i; $inner++ ) {
		my $pid = fork();

		if ($pid) {
			#parent
			push(@childs, $pid);
		} elsif ($pid == 0) {

#			open(DNS, '>>fastlist');

			my $domain = "$A.$B.$C.$D";

			my $j = $outer + $inner;
			my $server = $available_servers[$j];
			my $resolver   = Net::DNS::Resolver->new(
				nameservers => [ $server->{ip} ],
				recurse     => 1,
				debug       => 0,
				retry       => 1,
			);

			$resolver->tcp_timeout(1);
#			$resolver->debug(1);

			my $t0 = [gettimeofday];

			my $result = $resolver->query($domain, $type);
	
			if ($result) {
				my @answers = $result->answer;
				for my $answer (@answers) {
#					my $test = $answer->string;
#					print "$test\n\n";
					my %answerdata;
				        @answerdata{qw(host ttl type class val)} =
		        		    split /\s+/, $answer->string, 5;

				        push @answer_list, {%answerdata};
        				push @t, $answerdata{host};

					if ( $answerdata{val} =~ /navi\.flyingdutchmen\.be\./ ) {
						my $t1 = [gettimeofday];
						my $t0_t1 = tv_interval $t0, $t1;
						my $elapsed = tv_interval ($t0);
						print "$server->{ip} OK. $elapsed\n\n";
						my $key = $server->{ip};
						my %child_hash;
						my $child_share = tie %child_hash, 'IPC::Shareable', $glue, { %options } or die "client: tie failed\n";
						$child_share->shlock;
						$final_parent_hash{$key} = $elapsed;
						$child_share->shunlock;
					}
				}
#			} else {
#				print "$j: NOK\n\n";
			}
			exit 0;
		}
	}
	foreach (@childs) {
		waitpid($_, 0);
	}

	$outer += 50;
}

print "fastest 10:\n";
$parent_share->shlock;
my @fast = (sort {$final_parent_hash{$a} <=> $final_parent_hash{$b}} keys %final_parent_hash)[0..9];

for (@fast) {
	print "$_: $final_parent_hash{$_}\n";
}
$parent_share->shunlock;
IPC::Shareable->clean_up_all;
