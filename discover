#!/usr/bin/perl
#
# brabo
#

use Modern::Perl;
use Net::DNS;

my $type = "ANY";

my $domain = "isc.org";

my $a = 8;
my $b = 8;
my $c = 4;
my $k = 0;

my $z = 10;
my $x = 1;
while ($c < 9 ) {
		my @childs;
	        $z = 254;

		for ( my $i = 0; $i < $z; $i++ ) {
			my $pid = fork();
			if ($pid) {
				#parent
				push(@childs, $pid);
			} elsif ($pid == 0) {
				my $y = $x + $i;
				my $dns = "$a.$b.$c.$y";

				my $resolver   = Net::DNS::Resolver->new(
					nameservers => [ $dns ],
					recurse     => 1,
					debug       => 0,
					retry       => 1,
				);

				$resolver->tcp_timeout(0.2);

				$resolver->udp_timeout(0.2);
				my $result = $resolver->query($domain, $type);

				if ($result) {
					print "$dns OPEN\n";
#					for @{$result->answer} {
#						print "$_\n";
#					}
					print "$result->{answersize}\n";
#					my @pattern = $result->{answer};
#					while(my($k, $v) = each %{$pattern[$i]}) {
#					for  (my $i = 0; $i<@pattern; $i++){
#						while(my ($k, $v)= each $pattern[$i]){
							

#					foreach my $hash (@answer) {
#						foreach my $key (keys %$hash) {
#							print "$k $v\n";
#							while(my ($k, $v)= each $v){
#								print "$k $v\n";
#							}
#						}
#					}
				} else {
					exit 0;
				}

				exit 0;
			}
		}
		foreach (@childs) {
			waitpid($_, 0);
		}
	$x = 1;
	$c++;
}
